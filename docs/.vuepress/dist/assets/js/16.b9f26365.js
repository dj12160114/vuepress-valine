(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{212:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"ajax"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ajax","aria-hidden":"true"}},[t._v("#")]),t._v(" Ajax")]),t._v(" "),s("h2",{attrs:{id:"_1-执行模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-执行模式","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 执行模式")]),t._v(" "),s("p",[t._v("JavaScript语言的执行环境是“单线程”，所谓“单线程”，就是指一次只能完成一件任务。如果有多个任务，就必须排队，前面一个任务完成，再执行后面一个任务。")]),t._v(" "),s("p",[t._v("为了解决这个问题，JavaScript将任务的执行模式分为两种：同步（Synchronous）和异步（Asynchronous）。")]),t._v(" "),s("ul",[s("li",[t._v('**"同步模式"**就是上一段的模式，后一个任务等待前一个任务结束，然后再执行，程序的执行顺序与任务的排列顺序是一致的、同步的；')]),t._v(" "),s("li",[t._v('"**异步模式"**则完全不同，每一个任务有一个或多个回调函数（callback），前一个任务结束后，不是执行后一个任务，而是执行回调函数，后一个任务则是不等前一个任务结束就执行，所以程序的执行顺序与任务的排列顺序是不一致的、异步的。')])]),t._v(" "),s("h2",{attrs:{id:"_2-ajax-简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-ajax-简介","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. Ajax 简介")]),t._v(" "),s("p",[t._v("而 Ajax， 即“"),s("em",[t._v("Asynchronous  Javascript And XML")]),t._v("”（异步 JavaScript 和 XML），可以在页面不刷新的情况下向服务器发送HTTP请求，并使用 JavaScript 处理返回的结果。")]),t._v(" "),s("h2",{attrs:{id:"_3-ajax包含的技术"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-ajax包含的技术","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. Ajax包含的技术")]),t._v(" "),s("p",[t._v("Ajax 不是一种新的编程语言，而是一种用于创建更好更快以及交互性更强的Web应用程序的技术。")]),t._v(" "),s("p",[t._v("由下列技术组合而成：")]),t._v(" "),s("ul",[s("li",[t._v("使用 css 和 hmtl 来表示。")]),t._v(" "),s("li",[t._v("DOM模型来交互和动态显示。")]),t._v(" "),s("li",[t._v("使用 XMLHttpRequest 来和服务器进行异步通信。")]),t._v(" "),s("li",[t._v("使用 JavaScript 来绑定和调用。")])]),t._v(" "),s("h2",{attrs:{id:"_4-ajax-的工作原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-ajax-的工作原理","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. Ajax 的工作原理")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://images2018.cnblogs.com/blog/1149203/201805/1149203-20180523172650318-867074931.png",alt:"img"}})]),t._v(" "),s("p",[t._v("XHR就是 XMLHttpRequest的缩写，是 Ajax 的核心，通过它来处理异步请求。")]),t._v(" "),s("h2",{attrs:{id:"_5-xmlhttprequest常用的属性和方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-xmlhttprequest常用的属性和方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 5.  XMLHttpRequest常用的属性和方法")]),t._v(" "),s("h3",{attrs:{id:"_5-1-创建-xmlhttprequest-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-创建-xmlhttprequest-对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 5.1 创建 XMLHttpRequest 对象")]),t._v(" "),s("p",[t._v("所有现代浏览器（IE7+、Firefox、Chrome、Safari 以及 Opera）均内建 XMLHttpRequest 对象。IE5 和 IE6 使用 ActiveXObject）。")]),t._v(" "),s("p",[t._v("为了应对所有的现代浏览器，包括 IE5 和 IE6，请检查浏览器是否支持 XMLHttpRequest 对象。如果支持，则创建 XMLHttpRequest 对象。如果不支持，则创建 ActiveXObject ：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" xmlhttp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("XMLHttpRequest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    xmlhttp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XMLHttpRequest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    xmlhttp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ActiveXObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Microsoft.XMLHTTP"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("h3",{attrs:{id:"_5-2-xmlhttprequest对象常见属性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-xmlhttprequest对象常见属性","aria-hidden":"true"}},[t._v("#")]),t._v(" 5.2 XMLHttpRequest对象常见属性")]),t._v(" "),s("p",[t._v("XMLHttpRequest对象的常见属性如下：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("属性")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("onreadystatechange")]),t._v(" "),s("td",[t._v("存储函数（或函数名），每当readyState的属性改变时，就会调用该函数。")])]),t._v(" "),s("tr",[s("td",[t._v("readyState")]),t._v(" "),s("td",[t._v("存有的XMLHttpRequest的状态从0到4发生变化。"),s("br"),t._v("0：请求未初始化"),s("br"),t._v("1：服务器连接已建立"),s("br"),t._v("2：请求已接收"),s("br"),t._v("3：请求处理中 "),s("br"),t._v("4：请求已完成，且响应已就绪")])]),t._v(" "),s("tr",[s("td",[t._v("reponseText")]),t._v(" "),s("td",[t._v("以文本形式返回响应。")])]),t._v(" "),s("tr",[s("td",[t._v("responseXML")]),t._v(" "),s("td",[t._v("以XML格式返回响应")])]),t._v(" "),s("tr",[s("td",[t._v("status")]),t._v(" "),s("td",[t._v("将状态返回为数字（例如，“Not Found”为404，“OK”为200）")])]),t._v(" "),s("tr",[s("td",[t._v("statusText")]),t._v(" "),s("td",[t._v("以字符串形式返回状态（例如，“Not Found”或“OK”）")])])])]),t._v(" "),s("h3",{attrs:{id:"_5-3-xhr-请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-xhr-请求","aria-hidden":"true"}},[t._v("#")]),t._v(" 5.3 XHR 请求")]),t._v(" "),s("p",[t._v("如需将请求发送到服务器，就需要使用 XMLHttpRequest 的 "),s("code",[t._v("open()")]),t._v(" 和 "),s("code",[t._v("send()")]),t._v(" 方法：")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("open(method, url, async)")]),t._v(" "),s("td",[t._v("规定请求的类型、URL以及是否异步处理请求。"),s("br"),t._v(" "),s("em",[t._v("method：")]),t._v(" 请求的类型，GET 或 POST"),s("br"),t._v(" "),s("em",[t._v("url：")]),t._v(" 文件在服务器上的位置"),s("br"),t._v(" "),s("em",[t._v("async：")]),t._v(" true（异步）或 false（同步）")])]),t._v(" "),s("tr",[s("td",[t._v("send(string)")]),t._v(" "),s("td",[t._v("将请求发送到服务器。"),s("br"),t._v(" *string：*仅用于 POST 请求")])])])]),t._v(" "),s("p",[s("strong",[t._v("(1) GET 请求")])]),t._v(" "),s("p",[t._v("如果希望通过 "),s("code",[t._v("GET")]),t._v(" 方法发送消息，请向 URL添加信息：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("xmlhttp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GET"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"demo_get2.html?fname=Henry&lname=Ford"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nxmlhttp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])]),s("p",[s("code",[t._v("GET")]),t._v(" 请求具有以下的几个特点：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("GET")]),t._v(" 请求可被缓存；")]),t._v(" "),s("li",[s("code",[t._v("GET")]),t._v(" 请求保留在浏览器历史记录中；")]),t._v(" "),s("li",[s("code",[t._v("GET")]),t._v(" 请求可被收藏为书签；")]),t._v(" "),s("li",[s("code",[t._v("GET")]),t._v(" 请求不应再处理敏感数据时使用；")]),t._v(" "),s("li",[s("code",[t._v("GET")]),t._v(" 请求有长度限制；")]),t._v(" "),s("li",[s("code",[t._v("GET")]),t._v(" 请求只应当用于取回数据。")])]),t._v(" "),s("p",[s("strong",[t._v("(2) POST 请求")])]),t._v(" "),s("p",[t._v("如果需要像 HTML 表单那样 POST 数据，请使用"),s("code",[t._v("setRequestHeader()")]),t._v("来添加 HTTP 头。然后在"),s("code",[t._v("send()")]),t._v("方法中规定希望发送的数据：")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("xmlhttp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"POST"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ajax_test.html"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nxmlhttp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setRequestHeader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-type"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"application/x-www-form-urlencoded"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nxmlhttp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fname=Henry&lname=Ford"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[s("code",[t._v("POST")]),t._v(" 请求具有以下的几个特点：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("POST")]),t._v(" 请求不会被缓存；")]),t._v(" "),s("li",[s("code",[t._v("POST")]),t._v(" 请求不会保留在浏览器历史记录中；")]),t._v(" "),s("li",[s("code",[t._v("POST")]),t._v(" 请求不能被收藏为书签；")]),t._v(" "),s("li",[s("code",[t._v("POST")]),t._v(" 请求对数据没有长度限制。")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("方法")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("setRequestHeader(header, value)")]),t._v(" "),s("td",[t._v("向请求添加HTTP头"),s("br"),t._v(" "),s("em",[t._v("header：")]),t._v(" 规定头的名称"),s("br"),t._v(" "),s("em",[t._v("value：")]),t._v(" 规定头的值")])])])]),t._v(" "),s("h3",{attrs:{id:"_5-4-xhr-响应"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-xhr-响应","aria-hidden":"true"}},[t._v("#")]),t._v(" 5.4 XHR 响应")]),t._v(" "),s("p",[t._v("由于 HTTP 响应是由服务端发出的，并且服务器作出相应需要时间，所以需要监听服务器响应的状态，然后才能进行处理。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("状态行")])])]),t._v(" "),s("p",[s("code",[t._v("xhr.status")]),t._v(" 状态码：200、304、404等；")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("响应主体")])])]),t._v(" "),s("p",[s("code",[t._v("xhr.responseText")]),t._v(" 与 "),s("code",[t._v("xhr.responseXML")]),t._v(" 都表示响应主体。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("属性")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("responseText")]),t._v(" "),s("td",[t._v("获得字符串形式的响应数据。")])]),t._v(" "),s("tr",[s("td",[t._v("responseXML")]),t._v(" "),s("td",[t._v("获得 XML 形式的响应数据。")])])])]),t._v(" "),s("h3",{attrs:{id:"_5-5-xhr-readystate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-5-xhr-readystate","aria-hidden":"true"}},[t._v("#")]),t._v(" 5.5 XHR readyState")]),t._v(" "),s("p",[t._v("**Ajax - onreadystatechange **")]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("当发送一个请求后，客户端需要确定这个请求什么时候会完成，因此，XMLHttpRequest对象提供了"),s("code",[t._v("onreadystatechange")]),t._v(" 事件机制来捕获请求的状态，继而实现响应。")]),t._v(" "),s("p",[t._v("每当"),s("code",[t._v("readyState")]),t._v("改变时，就会触发"),s("code",[t._v("onreadystatechange")]),t._v("事件。")]),t._v(" "),s("p",[s("code",[t._v("readyState")]),t._v("属性存有 XMLHttpRequest 的状态信息：")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[t._v("0：请求未初始化")])])]),t._v(" "),s("li",[s("p",[t._v("此阶段确认 XHR 是否创建，并为调用 "),s("code",[t._v("open")]),t._v(" 方法进行初始化做好准备，"),s("em",[t._v("值为 0表示 XHR 已经存在")]),t._v("，否则浏览器会报错：对象不存在。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("1：服务器连接已经建立")])])]),t._v(" "),s("li",[s("p",[t._v("此阶段对 XHR 进行初始化，即调用 "),s("code",[t._v("open")]),t._v(" 方法，根据参数完成对象状态的设置，并调用 "),s("code",[t._v("send")]),t._v(" 方法开始向服务器发送请求。"),s("em",[t._v("值为 1 表示正在向服务端发送请求")]),t._v("。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("2：请求已接收")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("此阶段接收服务器端的响应数据。但获得的还只是服务端响应的原始数据，并不能直接在客户端使用。")]),t._v(" "),s("p",[s("strong",[t._v("值为 2 表示已经接收完全部响应数据")]),t._v("，并为下一阶段对数据解析作好准备。")])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("3：请求处理中")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("此阶段解析收到的服务端相应数据，即根据服务器响应头部返回的 "),s("a",{attrs:{href:"https://www.w3school.com.cn/media/media_mimeref.asp",target:"_blank",rel:"noopener noreferrer"}},[t._v("MIME类型"),s("OutboundLink")],1),t._v(" 把数据转换为能通过 "),s("code",[t._v("responseBody")]),t._v("，"),s("code",[t._v("responseText")]),t._v(" 或 "),s("code",[t._v("responseXML")]),t._v(" 的属性存取的格式，为在客户端调用做好准备。")]),t._v(" "),s("p",[s("em",[t._v("值为 3 表示正在解析数据。")])])])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("4：请求已经完成，且响应已就绪")])]),t._v(" "),s("ul",[s("li",[t._v("此阶段确认全部数据都已经解析为客户端可用的格式，解析已经完成。"),s("em",[t._v("值为4表示数据解析完毕。")])])])])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("总结可知，整个 XHR 的生命周期包含如下阶段：\n\n1. 创建\n2. 初始化请求\n3. 发送请求\n4. 接收数据\n5. 解析数据\n6. 完成\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("p",[t._v("在"),s("code",[t._v("onreadystatechange")]),t._v("事件中，我们规定当服务器响应已做好被处理的准备时所执行的任务。")]),t._v(" "),s("p",[t._v("当"),s("code",[t._v("readyState")]),t._v("等于 4 且状态为 200 时，表示响应已就绪：")])])}),[],!1,null,null,null);a.default=n.exports}}]);